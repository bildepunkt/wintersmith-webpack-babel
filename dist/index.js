// Generated by CoffeeScript 1.10.0
(function() {
  var fs, xpile,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  fs = require('fs');

  xpile = require('./xpile');

  module.exports = function(env, callback) {
    var WebpackPlugin, config, pattern;
    config = env.config.webpackBabel || {};
    if (config.pattern != null) {
      pattern = config.pattern;
      delete config.pattern;
    }
    WebpackPlugin = (function(superClass) {
      extend(WebpackPlugin, superClass);

      function WebpackPlugin(filepath1) {
        this.filepath = filepath1;
      }

      WebpackPlugin.prototype.getFilename = function() {
        return this.filepath.relative;
      };

      WebpackPlugin.prototype.getView = function() {
        return function(env, locals, contents, templates, callback) {
          return xpile(this.filepath, config.output, function(result) {
            return callback(null, new Buffer(result));
          });
        };
      };

      return WebpackPlugin;

    })(env.ContentPlugin);
    WebpackPlugin.fromFile = function(filepath, callback) {
      return fs.readFile(filepath.full, function(error, result) {
        var plugin;
        if (error == null) {
          plugin = new WebpackPlugin(filepath);
        }
        return callback(error, plugin);
      });
    };
    env.registerContentPlugin('scripts', pattern || '**/main.*(js|es|es6|jsx)', WebpackPlugin);
    return callback();
  };

}).call(this);
